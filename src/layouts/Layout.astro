---
import { Image } from "@astrojs/image/components";

export interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
import logo from "../images/bioinfoclass_logo.png";
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto"
      rel="stylesheet"
    />
    <!-- Beam analytics -->
    <script
      src="https://beamanalytics.b-cdn.net/beam.min.js"
      data-token="b78880a2-a3f3-4973-8718-3cbef4e74d6c"
      async
    ></script>
  </head>
  <body class="bg-slate-100">
    <nav
      id="header"
      class="sticky left-0 right-0 top-0 z-40 mx-5 mb-10 flex flex-wrap items-center justify-between gap-4 p-5 transition-all duration-300 ease-in-out"
    >
      <a href="/">
        <Image
          class="ml-10 hover:cursor-pointer hover:opacity-70"
          src={logo}
          alt="BioinfoClass"
          width={80}
          height={80}
        />
      </a>
      <div class="mr-20 flex gap-10 text-lg">
        <a
          class="relative p-2 transition-colors duration-300 before:absolute before:bottom-0 before:left-0 before:block before:h-[2px] before:w-full before:origin-top-left before:scale-x-0 before:bg-blue-500 before:transition before:duration-300 before:ease-in-out before:content-[''] hover:text-blue-500 before:hover:scale-x-100"
          href="/">Home</a
        >
        <a
          class="relative p-2 transition-colors duration-300 before:absolute before:bottom-0 before:left-0 before:block before:h-[2px] before:w-full before:origin-top-left before:scale-x-0 before:bg-blue-500 before:transition before:duration-300 before:ease-in-out before:content-[''] hover:text-blue-500 before:hover:scale-x-100"
          href="/sobre">Sobre</a
        >
        <a
          class="disabled relative p-2 transition-colors duration-300 before:absolute before:bottom-0 before:left-0 before:block before:h-[2px] before:w-full before:origin-top-left before:scale-x-0 before:bg-blue-500 before:transition before:duration-300 before:ease-in-out before:content-[''] hover:text-blue-500 before:hover:scale-x-100"
          href="#">Cursos <span class="text-xs">(em breve!)</span></a
        >
        <a
          class="relative p-2 transition-colors duration-300 before:absolute before:bottom-0 before:left-0 before:block before:h-[2px] before:w-full before:origin-top-left before:scale-x-0 before:bg-blue-500 before:transition before:duration-300 before:ease-in-out before:content-[''] hover:text-blue-500 before:hover:scale-x-100"
          href="/blog">Blog</a
        >
        <a
          class="rounded-md border border-blue-300 p-2 text-blue-600 transition-colors duration-500 hover:bg-blue-500 hover:text-white"
          href="/contato">Entre em Contato!</a
        >
      </div>
    </nav>
    <slot />
  </body>
</html>

<script>
  // Hide and Show Desktop Header //
  var prevScrollpos = window.pageYOffset;
  window.onscroll = function () {
    var currentScrollPos = window.pageYOffset;
    if (currentScrollPos === 0) {
      document.getElementById("header").style.opacity = "1";
    } else if (prevScrollpos > currentScrollPos) {
      document.getElementById("header").style.opacity = "1";
    } else {
      document.getElementById("header").style.opacity = "0";
    }
    prevScrollpos = currentScrollPos;
  };
</script>

<script>
  const navLinks = document.querySelectorAll("nav a");

  navLinks.forEach((link) => {
    link.classList.remove("text-blue-500");

    // `slice` here to remove the first `/` in pathname
    const currentPath = window.location.pathname.slice("1");

    // `link.href` returns a whole url, such as: "https://somedomain.com/posts" and we only need the last part
    const hrefArray = link.href.split("/");
    const thisPath = hrefArray[hrefArray.length - 1];

    if (currentPath === thisPath && currentPath !== "") {
      link.classList.add("text-blue-500");
    }
  });
</script>
